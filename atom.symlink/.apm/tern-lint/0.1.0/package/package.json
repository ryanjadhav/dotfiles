{"name":"tern-lint","license":"MIT","version":"0.1.0","main":"lint.js","author":{"name":"Angelo ZERR","email":"angelo.zerr@gmail.com"},"description":"Tern plugin to validate JS files.","repository":{"type":"git","url":"git://github.com/angelozerr/tern-lint.git"},"scripts":{"test":"node ./test/all.js"},"dependencies":{"tern":">=0.10.0","acorn":">=1.0.0"},"devDependencies":{"test":">=0.0.5"},"gitHead":"6c64dec23cab931c83bab15b987e44eaa8ed51f3","readme":"tern-lint\n=========\n\n[![Build Status](https://secure.travis-ci.org/angelozerr/tern-lint.png)](http://travis-ci.org/angelozerr/tern-lint)\n\n**tern-lint** is a tern plugin which is able to validate JavaScripts files to collect **semantic errors**. It's the main difference with other famous linters like [JSHint](http://jshint.com/), [ESLint](http://eslint.org/), [JSCS ](http://jscs.info/) which validate JavaScript files to collect **syntax errors**.\n\nWhat do you mean with semantic errors? Invalid argument is a sample of semantic error :\n\n![Invalid Argument](https://github.com/angelozerr/tern-lint/wiki/images/CodeMirrorAddon_InvalidArgument.png)\n\nSee [Validation rules](https://github.com/angelozerr/tern.lint/wiki/Validation-Rules) for more informations.\n\n**tern-lint** provides :\n\n * the tern lint plugin `lint.js` to validate JS files.\n * the CodeMirror lint addon `tern-lint.js` which uses tern lint plugin `lint.js`\n\n# Integration\n\nSee [Integration](https://github.com/angelozerr/tern.lint/wiki/Integration) for more information to integrate the tern lint plugin in your editor.\n\n## with CodeMirror :\n\nHere a screenshot with tern lint and CodeMirror :\n\n![CodeMirror & TernLint](https://github.com/angelozerr/tern.lint/wiki/images/CodeMirrorAddon_TernLintOverview.png)\n\n## with Eclipse :\n\nIf you are Eclipse user, you can use the tern lint.js too. See [Tern IDE & Validation](https://github.com/angelozerr/tern.java/wiki/Tern-Linter-Lint)\n\n![Eclipse & TernLint](https://github.com/angelozerr/tern.lint/wiki/images/EclipseIDE_TernLintOverview.png)\n\n## with Emacs\n\n![Emacs & TernLint](https://camo.githubusercontent.com/a0aee78d66237ddc65e4ab1291ccbb496f52fd25/687474703a2f2f692e696d6775722e636f6d2f723335615244512e706e67)\n\nSee [tern-lint.el](https://github.com/katspaugh/tern-lint.el) for more information.\n\n## with Atom\n\n![Atom & TernLint](https://camo.githubusercontent.com/2f6791e4df4362cdbaf3f3fff17db1af63f24314/687474703a2f2f7777772e746f626961732d73636875626572742e636f6d2f6769746875622f6769746875622d7465726e2d6c696e742e706e67)\n\nSee [atom-ternjs](https://github.com/tststs/atom-ternjs) for more information.\n\n## with other editor\n\nIf you wish to integrate the tern lint with an editor (vim, etc), here the **JSON request** to post to the tern server :\n\n\t{\n\t \"query\": {\n\t  \"type\": \"lint\",\n\t  \"file\": \"test.js\",\n\t  \"files\": [\n\t   {\n\t    \"name\": \"test.js\",\n\t    \"text\": \"var elt = document.getElementByIdXXX('myId');\",\n\t    \"type\": \"full\"\n\t   }\n\t  ]\n\t }\n\t}\n\nand the **JSON response** of the tern server :\n\n\t{\n\t \"messages\": [\n\t  {\n\t   \"message\": \"Unknow property 'getElementByIdXXX'\",\n\t   \"from\": 19,\n\t   \"to\": 36,\n\t   \"severity\": \"warning\"\n\t  }\n\t ]\n\t}\n\n## Validation rules\n\ntern lint validate JS files but not syntax errors, it manages those validation rules :\n\n * unknown property. (ex : document.getElementByIdXXX  where getElementByIdXXX is an unknown property of document)\n * unknown identifier. (ex : a = '' where a is an unknown identifier)\n * not a function (ex : var a = []; a.length() is not valid because length of array is not a function)\n * invalid argument (ex : document.getElementById(1000) is not valid because 1000 is a number and not a string)\n\nSee [Validation rules](https://github.com/angelozerr/tern.lint/wiki/Validation-Rules) for more informations.\n\n## Structure\n\nThe basic structure of the project is given in the following way:\n\n* `demos/` demos with tern lint plugin which use CodeMirror.\n* `codemirror/` contains the CodeMirror lint addon `tern-lint.js`, which is an implementation of CodeMirror lint addon with tern.lint.\n* `lint.js/` the tern lint plugin.\n* `test/` contains test of tern lint plugin.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/angelozerr/tern-lint/issues"},"homepage":"https://github.com/angelozerr/tern-lint","_id":"tern-lint@0.1.0","_shasum":"e8a1fbeeb3984d454f47769dc662f639d37f35a5","_from":"../../../../../../../var/folders/7n/jyntl1z97lj0q30rvgppl9sm0000gn/T/npm-84955-89663a34/git-cache-b3609b488473/6c64dec23cab931c83bab15b987e44eaa8ed51f3","_resolved":"git+https://github.com/angelozerr/tern-lint.git#6c64dec23cab931c83bab15b987e44eaa8ed51f3"}